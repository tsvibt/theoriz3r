{"finite":["finite(S_3)"],"not finite":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","aleph_0(Z)"],"aleph_0":["aleph_0(Z)"],"not aleph_0":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_3)"],"uncountable":["uncountable(R)"],"not uncountable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_3)"],"trivial":["trivial(one)"],"not trivial":["Not(trivial(S_5))"],"cyclic":["cyclic(Z)"],"not cyclic":["Not(cyclic(Zup2))"],"abelian":["abelian(R)"],"not abelian":["Not(abelian(S_3))"],"prime_order":["prime_order(S_2)"],"not prime_order":["ForAll(X, Implies(prime_order(X), cyclic(X)))","Not(cyclic(Zup2))"],"symmetric":["symmetric(S_3)"],"not symmetric":["Not(symmetric(Z))"],"finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","finitely_presentable(Zup2)"],"not finitely_generated":["Not(finitely_generated(ZupZ))"],"finitely_presentable":["finitely_presentable(Zup2)"],"not finitely_presentable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","Not(finitely_generated(ZupZ))"],"solvable":["solvable(S_3)"],"not solvable":["Not(solvable(S_N))"],"free":["free(Z)"],"not free":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","uncountable(R)","abelian(R)"],"prime_power_order":["prime_power_order(D_4)"],"not prime_power_order":["Not(prime_power_order(S_3))"],"torsion_containing":["torsion_containing(S_N)"],"not torsion_containing":["Not(torsion_containing(ZupZ))"],"finite, aleph_0":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, not aleph_0":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_3)"],"not finite, aleph_0":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","aleph_0(Z)"],"not finite, not aleph_0":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","uncountable(R)"],"finite, uncountable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, not uncountable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_3)"],"not finite, uncountable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","uncountable(R)"],"not finite, not uncountable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Z)"],"finite, trivial":["trivial(one)","ForAll(X, Implies(trivial(X), finite(X)))"],"finite, not trivial":["finite(S_5)","Not(trivial(S_5))"],"not finite, trivial":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, not trivial":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(Z)","Not(symmetric(Z))"],"finite, cyclic":["ForAll(X, Implies(prime_order(X), cyclic(X)))","finite(S_2)","prime_order(S_2)"],"finite, not cyclic":["ForAll(X, Implies(cyclic(X), abelian(X)))","finite(S_3)","Not(abelian(S_3))"],"not finite, cyclic":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Z)","cyclic(Z)"],"not finite, not cyclic":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Zup2)","Not(cyclic(Zup2))"],"finite, abelian":["finite(S_2)","abelian(S_2)"],"finite, not abelian":["finite(S_3)","Not(abelian(S_3))"],"not finite, abelian":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Zup2)","abelian(Zup2)"],"not finite, not abelian":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","uncountable(S_N)","Not(abelian(S_N))"],"finite, prime_order":["finite(S_2)","prime_order(S_2)"],"finite, not prime_order":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","finite(S_3)","Not(prime_power_order(S_3))"],"not finite, prime_order":["ForAll(X, Implies(prime_order(X), finite(X)))"],"not finite, not prime_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), finite(X)))","aleph_0(Z)"],"finite, symmetric":["finite(S_3)","symmetric(S_3)"],"finite, not symmetric":["ForAll(X, Implies(prime_order(X), finite(X)))","Not(symmetric(Z_3))","prime_order(Z_3)"],"not finite, symmetric":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","symmetric(S_N)","uncountable(S_N)"],"not finite, not symmetric":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Z)","Not(symmetric(Z))"],"finite, finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)"],"finite, not finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"not finite, finitely_generated":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(Z)","cyclic(Z)"],"not finite, not finitely_generated":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"finite, finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)"],"finite, not finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"not finite, finitely_presentable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Zup2)","finitely_presentable(Zup2)"],"not finite, not finitely_presentable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"finite, solvable":["finite(S_3)","solvable(S_3)"],"finite, not solvable":["finite(S_5)","Not(solvable(S_5))"],"not finite, solvable":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(abelian(X), solvable(X)))","aleph_0(Z)","cyclic(Z)"],"not finite, not solvable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","uncountable(S_N)","Not(solvable(S_N))"],"finite, free":["trivial(one)","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), free(X)))"],"finite, not free":["ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","finite(S_3)","Not(abelian(S_3))","solvable(S_3)"],"not finite, free":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Z)","free(Z)"],"not finite, not free":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","aleph_0(Zup2)","Not(cyclic(Zup2))","abelian(Zup2)"],"finite, prime_power_order":["ForAll(X, Implies(prime_power_order(X), finite(X)))","prime_power_order(D_4)"],"finite, not prime_power_order":["finite(S_3)","Not(prime_power_order(S_3))"],"not finite, prime_power_order":["ForAll(X, Implies(prime_power_order(X), finite(X)))"],"not finite, not prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))","aleph_0(Z)"],"finite, torsion_containing":["ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","finite(S_5)","Not(trivial(S_5))"],"finite, not torsion_containing":["trivial(one)","ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))","ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, torsion_containing":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","uncountable(S_N)","torsion_containing(S_N)"],"not finite, not torsion_containing":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(ZupZ)","Not(torsion_containing(ZupZ))"],"aleph_0, uncountable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"aleph_0, not uncountable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Z)"],"not aleph_0, uncountable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","uncountable(R)"],"not aleph_0, not uncountable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_3)"],"aleph_0, trivial":["ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))","ForAll(X, Implies(trivial(X), symmetric(X)))"],"aleph_0, not trivial":["ForAll(X, Implies(trivial(X), cyclic(X)))","aleph_0(Zup2)","Not(cyclic(Zup2))"],"not aleph_0, trivial":["trivial(one)","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), finite(X)))"],"not aleph_0, not trivial":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_5)","Not(trivial(S_5))"],"aleph_0, cyclic":["aleph_0(Z)","cyclic(Z)"],"aleph_0, not cyclic":["aleph_0(Zup2)","Not(cyclic(Zup2))"],"not aleph_0, cyclic":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), finite(X)))","cyclic(Z_3)","prime_order(Z_3)"],"not aleph_0, not cyclic":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_3)","Not(abelian(S_3))"],"aleph_0, abelian":["aleph_0(Zup2)","abelian(Zup2)"],"not aleph_0, abelian":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_2)","abelian(S_2)"],"not aleph_0, not abelian":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_3)","Not(abelian(S_3))"],"aleph_0, prime_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), finite(X)))"],"aleph_0, not prime_order":["ForAll(X, Implies(prime_order(X), cyclic(X)))","aleph_0(Zup2)","Not(cyclic(Zup2))"],"not aleph_0, prime_order":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_2)","prime_order(S_2)"],"not aleph_0, not prime_order":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","finite(S_3)","Not(prime_power_order(S_3))"],"aleph_0, symmetric":["ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))"],"aleph_0, not symmetric":["aleph_0(Z)","Not(symmetric(Z))"],"not aleph_0, symmetric":["ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))","symmetric(S_3)"],"not aleph_0, not symmetric":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","uncountable(R)","Not(symmetric(R))"],"aleph_0, finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(Zup2)","finitely_presentable(Zup2)"],"aleph_0, not finitely_generated":["aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"not aleph_0, finitely_generated":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)"],"not aleph_0, not finitely_generated":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(R)"],"aleph_0, finitely_presentable":["aleph_0(Zup2)","finitely_presentable(Zup2)"],"aleph_0, not finitely_presentable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"not aleph_0, finitely_presentable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)"],"not aleph_0, not finitely_presentable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(R)"],"aleph_0, solvable":["ForAll(X, Implies(abelian(X), solvable(X)))","aleph_0(Zup2)","abelian(Zup2)"],"not aleph_0, solvable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_3)","solvable(S_3)"],"not aleph_0, not solvable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_5)","Not(solvable(S_5))"],"aleph_0, free":["aleph_0(Z)","free(Z)"],"aleph_0, not free":["ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","aleph_0(Zup2)","Not(cyclic(Zup2))","abelian(Zup2)"],"not aleph_0, free":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","uncountable(FreeR)","free(FreeR)"],"not aleph_0, not free":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","finite(S_3)","Not(abelian(S_3))","solvable(S_3)"],"aleph_0, prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))"],"aleph_0, not prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))","aleph_0(Z)"],"not aleph_0, prime_power_order":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))","prime_power_order(D_4)"],"not aleph_0, not prime_power_order":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_3)","Not(prime_power_order(S_3))"],"aleph_0, not torsion_containing":["aleph_0(ZupZ)","Not(torsion_containing(ZupZ))"],"not aleph_0, torsion_containing":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","uncountable(S_N)","torsion_containing(S_N)"],"not aleph_0, not torsion_containing":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","uncountable(FreeR)","free(FreeR)"],"uncountable, trivial":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"uncountable, not trivial":["ForAll(X, Implies(trivial(X), symmetric(X)))","uncountable(R)","Not(symmetric(R))"],"not uncountable, trivial":["trivial(one)","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"not uncountable, not trivial":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_5)","Not(trivial(S_5))"],"uncountable, cyclic":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))"],"uncountable, not cyclic":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","uncountable(R)"],"not uncountable, cyclic":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","cyclic(Z)"],"not uncountable, not cyclic":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Zup2)","Not(cyclic(Zup2))"],"uncountable, abelian":["uncountable(R)","abelian(R)"],"uncountable, not abelian":["uncountable(S_N)","Not(abelian(S_N))"],"not uncountable, abelian":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_2)","abelian(S_2)"],"not uncountable, not abelian":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_3)","Not(abelian(S_3))"],"uncountable, prime_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), finite(X)))"],"uncountable, not prime_order":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X, Implies(prime_order(X), cyclic(X)))","uncountable(R)"],"not uncountable, prime_order":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_2)","prime_order(S_2)"],"not uncountable, not prime_order":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","finite(S_3)","Not(prime_power_order(S_3))"],"uncountable, symmetric":["symmetric(S_N)","uncountable(S_N)"],"uncountable, not symmetric":["uncountable(R)","Not(symmetric(R))"],"not uncountable, symmetric":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_3)","symmetric(S_3)"],"not uncountable, not symmetric":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Z)","Not(symmetric(Z))"],"uncountable, finitely_generated":["ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))"],"uncountable, not finitely_generated":["ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(R)"],"not uncountable, finitely_generated":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(Zup2)","finitely_presentable(Zup2)"],"not uncountable, not finitely_generated":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"uncountable, finitely_presentable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))"],"uncountable, not finitely_presentable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(R)"],"not uncountable, finitely_presentable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Zup2)","finitely_presentable(Zup2)"],"not uncountable, not finitely_presentable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"uncountable, solvable":["ForAll(X, Implies(abelian(X), solvable(X)))","uncountable(R)","abelian(R)"],"uncountable, not solvable":["uncountable(S_N)","Not(solvable(S_N))"],"not uncountable, solvable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_3)","solvable(S_3)"],"not uncountable, not solvable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_5)","Not(solvable(S_5))"],"uncountable, free":["uncountable(FreeR)","free(FreeR)"],"uncountable, not free":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","uncountable(R)","abelian(R)"],"not uncountable, free":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Z)","free(Z)"],"not uncountable, not free":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","finite(S_3)","Not(abelian(S_3))","solvable(S_3)"],"uncountable, prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))"],"uncountable, not prime_power_order":["symmetric(S_N)","uncountable(S_N)","Not(abelian(S_N))","ForAll(X,\n       Implies(And(symmetric(X), Not(abelian(X))),\n               Not(prime_power_order(X))))"],"not uncountable, prime_power_order":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))","prime_power_order(D_4)"],"not uncountable, not prime_power_order":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_3)","Not(prime_power_order(S_3))"],"uncountable, torsion_containing":["uncountable(S_N)","torsion_containing(S_N)"],"uncountable, not torsion_containing":["ForAll(X, Implies(torsion_containing(X), Not(free(X))))","uncountable(FreeR)","free(FreeR)"],"not uncountable, torsion_containing":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","finite(S_5)","Not(trivial(S_5))"],"not uncountable, not torsion_containing":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(ZupZ)","Not(torsion_containing(ZupZ))"],"trivial, cyclic":["trivial(one)","ForAll(X, Implies(trivial(X), cyclic(X)))"],"trivial, not cyclic":["ForAll(X, Implies(trivial(X), cyclic(X)))"],"not trivial, cyclic":["ForAll(X, Implies(trivial(X), symmetric(X)))","cyclic(Z)","Not(symmetric(Z))"],"not trivial, not cyclic":["ForAll(X, Implies(trivial(X), cyclic(X)))","Not(cyclic(Zup2))"],"trivial, abelian":["trivial(one)","ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"trivial, not abelian":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"not trivial, abelian":["ForAll(X, Implies(trivial(X), cyclic(X)))","Not(cyclic(Zup2))","abelian(Zup2)"],"not trivial, not abelian":["ForAll(X, Implies(abelian(X), solvable(X)))","Not(trivial(S_5))","Not(solvable(S_5))"],"trivial, prime_order":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"trivial, not prime_order":["trivial(one)","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"not trivial, prime_order":["ForAll(X, Implies(trivial(X), symmetric(X)))","Not(symmetric(Z_3))","prime_order(Z_3)"],"not trivial, not prime_order":["ForAll(X, Implies(abelian(X), solvable(X)))","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","symmetric(S_5)","Not(trivial(S_5))","Not(solvable(S_5))","ForAll(X,\n       Implies(And(symmetric(X), Not(abelian(X))),\n               Not(prime_power_order(X))))"],"trivial, symmetric":["trivial(one)","ForAll(X, Implies(trivial(X), symmetric(X)))"],"trivial, not symmetric":["ForAll(X, Implies(trivial(X), symmetric(X)))"],"not trivial, symmetric":["symmetric(S_5)","Not(trivial(S_5))"],"not trivial, not symmetric":["ForAll(X, Implies(trivial(X), symmetric(X)))","Not(symmetric(Z))"],"trivial, finitely_generated":["trivial(one)","ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"trivial, not finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","ForAll(X, Implies(trivial(X), finite(X)))"],"not trivial, finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_5)","Not(trivial(S_5))"],"not trivial, not finitely_generated":["ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"trivial, finitely_presentable":["trivial(one)","ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"trivial, not finitely_presentable":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"not trivial, finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_5)","Not(trivial(S_5))"],"not trivial, not finitely_presentable":["ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"trivial, solvable":["trivial(one)","ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(abelian(X), solvable(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"trivial, not solvable":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(abelian(X), solvable(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"not trivial, solvable":["ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))","prime_power_order(D_4)","solvable(D_4)"],"not trivial, not solvable":["Not(trivial(S_5))","Not(solvable(S_5))"],"trivial, free":["trivial(one)","ForAll(X, Implies(trivial(X), free(X)))"],"trivial, not free":["ForAll(X, Implies(trivial(X), free(X)))"],"not trivial, free":["ForAll(X, Implies(trivial(X), symmetric(X)))","Not(symmetric(Z))","free(Z)"],"not trivial, not free":["ForAll(X, Implies(torsion_containing(X), Not(free(X))))","ForAll(X,\n       Implies(And(symmetric(X), Not(trivial(X))),\n               torsion_containing(X)))","symmetric(S_5)","Not(trivial(S_5))"],"trivial, prime_power_order":["ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"trivial, not prime_power_order":["trivial(one)","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"not trivial, prime_power_order":["ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))","prime_power_order(D_4)"],"not trivial, not prime_power_order":["ForAll(X, Implies(abelian(X), solvable(X)))","symmetric(S_5)","Not(trivial(S_5))","Not(solvable(S_5))","ForAll(X,\n       Implies(And(symmetric(X), Not(abelian(X))),\n               Not(prime_power_order(X))))"],"trivial, torsion_containing":["ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))"],"trivial, not torsion_containing":["trivial(one)","ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))"],"not trivial, torsion_containing":["ForAll(X,\n       Implies(And(symmetric(X), Not(trivial(X))),\n               torsion_containing(X)))","symmetric(S_5)","Not(trivial(S_5))"],"not trivial, not torsion_containing":["ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(ZupZ)","Not(torsion_containing(ZupZ))"],"cyclic, abelian":["ForAll(X, Implies(cyclic(X), abelian(X)))","cyclic(Z)"],"cyclic, not abelian":["ForAll(X, Implies(cyclic(X), abelian(X)))"],"not cyclic, abelian":["Not(cyclic(Zup2))","abelian(Zup2)"],"not cyclic, not abelian":["ForAll(X, Implies(cyclic(X), abelian(X)))","Not(abelian(S_3))"],"cyclic, prime_order":["cyclic(Z_3)","prime_order(Z_3)"],"cyclic, not prime_order":["trivial(one)","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"not cyclic, prime_order":["ForAll(X, Implies(prime_order(X), cyclic(X)))"],"not cyclic, not prime_order":["ForAll(X, Implies(prime_order(X), cyclic(X)))","Not(cyclic(Zup2))"],"cyclic, symmetric":["ForAll(X, Implies(prime_order(X), cyclic(X)))","symmetric(S_2)","prime_order(S_2)"],"cyclic, not symmetric":["cyclic(Z)","Not(symmetric(Z))"],"not cyclic, symmetric":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","symmetric(S_N)","uncountable(S_N)"],"not cyclic, not symmetric":["Not(cyclic(Zup2))","Not(symmetric(Zup2))"],"cyclic, finitely_generated":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","cyclic(Z)"],"cyclic, not finitely_generated":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))"],"not cyclic, finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","Not(cyclic(Zup2))","finitely_presentable(Zup2)"],"not cyclic, not finitely_generated":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","Not(finitely_generated(ZupZ))"],"cyclic, finitely_presentable":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","cyclic(Z)"],"cyclic, not finitely_presentable":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))"],"not cyclic, finitely_presentable":["Not(cyclic(Zup2))","finitely_presentable(Zup2)"],"not cyclic, not finitely_presentable":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","Not(finitely_generated(ZupZ))"],"cyclic, solvable":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(abelian(X), solvable(X)))","cyclic(Z)"],"cyclic, not solvable":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(abelian(X), solvable(X)))"],"not cyclic, solvable":["ForAll(X, Implies(cyclic(X), abelian(X)))","Not(abelian(S_3))","solvable(S_3)"],"not cyclic, not solvable":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","uncountable(S_N)","Not(solvable(S_N))"],"cyclic, free":["cyclic(Z)","free(Z)"],"cyclic, not free":["ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","ForAll(X, Implies(trivial(X), symmetric(X)))","Not(symmetric(Z_3))","cyclic(Z_3)","prime_order(Z_3)"],"not cyclic, free":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","uncountable(FreeR)","free(FreeR)"],"not cyclic, not free":["ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","Not(cyclic(Zup2))","abelian(Zup2)"],"cyclic, prime_power_order":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","cyclic(Z_3)","prime_order(Z_3)"],"cyclic, not prime_power_order":["trivial(one)","ForAll(X, Implies(trivial(X), cyclic(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"not cyclic, prime_power_order":["ForAll(X, Implies(cyclic(X), abelian(X)))","Not(abelian(D_4))","prime_power_order(D_4)"],"not cyclic, not prime_power_order":["ForAll(X, Implies(cyclic(X), abelian(X)))","Not(abelian(S_3))","Not(prime_power_order(S_3))"],"cyclic, torsion_containing":["ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(trivial(X), symmetric(X)))","Not(symmetric(Z_3))","cyclic(Z_3)","prime_order(Z_3)"],"cyclic, not torsion_containing":["ForAll(X, Implies(torsion_containing(X), Not(free(X))))","cyclic(Z)","free(Z)"],"not cyclic, torsion_containing":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","uncountable(S_N)","torsion_containing(S_N)"],"not cyclic, not torsion_containing":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","Not(finitely_generated(ZupZ))","Not(torsion_containing(ZupZ))"],"abelian, prime_order":["abelian(S_2)","prime_order(S_2)"],"abelian, not prime_order":["ForAll(X, Implies(prime_order(X), cyclic(X)))","Not(cyclic(Zup2))","abelian(Zup2)"],"not abelian, prime_order":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(prime_order(X), cyclic(X)))"],"not abelian, not prime_order":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","Not(abelian(S_3))","Not(prime_power_order(S_3))"],"abelian, symmetric":["abelian(S_2)","symmetric(S_2)"],"abelian, not symmetric":["abelian(R)","Not(symmetric(R))"],"not abelian, symmetric":["Not(abelian(S_3))","symmetric(S_3)"],"not abelian, not symmetric":["Not(abelian(D_4))","prime_power_order(D_4)","ForAll(X,\n       Implies(And(symmetric(X), Not(abelian(X))),\n               Not(prime_power_order(X))))"],"abelian, finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","abelian(Zup2)","finitely_presentable(Zup2)"],"abelian, not finitely_generated":["abelian(ZupZ)","Not(finitely_generated(ZupZ))"],"not abelian, finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)","Not(abelian(S_3))"],"not abelian, not finitely_generated":["ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(S_N)","Not(abelian(S_N))"],"abelian, finitely_presentable":["abelian(Zup2)","finitely_presentable(Zup2)"],"abelian, not finitely_presentable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","abelian(ZupZ)","Not(finitely_generated(ZupZ))"],"not abelian, finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)","Not(abelian(S_3))"],"not abelian, not finitely_presentable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(S_N)","Not(abelian(S_N))"],"abelian, solvable":["ForAll(X, Implies(abelian(X), solvable(X)))","abelian(R)"],"abelian, not solvable":["ForAll(X, Implies(abelian(X), solvable(X)))"],"not abelian, solvable":["Not(abelian(S_3))","solvable(S_3)"],"not abelian, not solvable":["Not(abelian(S_N))","Not(solvable(S_N))"],"abelian, free":["ForAll(X, Implies(cyclic(X), abelian(X)))","cyclic(Z)","free(Z)"],"abelian, not free":["ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","Not(cyclic(Zup2))","abelian(Zup2)"],"not abelian, free":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","uncountable(FreeR)","free(FreeR)"],"not abelian, not free":["ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","Not(abelian(S_3))","solvable(S_3)"],"abelian, prime_power_order":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","abelian(S_2)","prime_order(S_2)"],"abelian, not prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))","aleph_0(Zup2)","abelian(Zup2)"],"not abelian, prime_power_order":["Not(abelian(D_4))","prime_power_order(D_4)"],"not abelian, not prime_power_order":["Not(abelian(S_3))","Not(prime_power_order(S_3))"],"abelian, torsion_containing":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))","finite(S_2)","abelian(S_2)","prime_order(S_2)"],"abelian, not torsion_containing":["abelian(ZupZ)","Not(torsion_containing(ZupZ))"],"not abelian, torsion_containing":["Not(abelian(S_N))","torsion_containing(S_N)"],"not abelian, not torsion_containing":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","uncountable(FreeR)","free(FreeR)"],"prime_order, symmetric":["symmetric(S_2)","prime_order(S_2)"],"prime_order, not symmetric":["Not(symmetric(Z_3))","prime_order(Z_3)"],"not prime_order, symmetric":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","symmetric(S_3)","Not(prime_power_order(S_3))"],"not prime_order, not symmetric":["ForAll(X, Implies(prime_order(X), cyclic(X)))","Not(cyclic(Zup2))","Not(symmetric(Zup2))"],"prime_order, finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_2)","prime_order(S_2)"],"prime_order, not finitely_generated":["ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"not prime_order, finitely_generated":["ForAll(X, Implies(prime_order(X), cyclic(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","Not(cyclic(Zup2))","finitely_presentable(Zup2)"],"not prime_order, not finitely_generated":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), finite(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"prime_order, finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_2)","prime_order(S_2)"],"prime_order, not finitely_presentable":["ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"not prime_order, finitely_presentable":["ForAll(X, Implies(prime_order(X), cyclic(X)))","Not(cyclic(Zup2))","finitely_presentable(Zup2)"],"not prime_order, not finitely_presentable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"prime_order, solvable":["ForAll(X, Implies(abelian(X), solvable(X)))","abelian(S_2)","prime_order(S_2)"],"prime_order, not solvable":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(prime_order(X), cyclic(X)))","ForAll(X, Implies(abelian(X), solvable(X)))"],"not prime_order, solvable":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","Not(prime_power_order(S_3))","solvable(S_3)"],"not prime_order, not solvable":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","symmetric(S_N)","Not(abelian(S_N))","Not(solvable(S_N))","ForAll(X,\n       Implies(And(symmetric(X), Not(abelian(X))),\n               Not(prime_power_order(X))))"],"prime_order, free":["ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"prime_order, not free":["ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","ForAll(X, Implies(trivial(X), symmetric(X)))","Not(symmetric(Z_3))","prime_order(Z_3)"],"not prime_order, free":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X, Implies(prime_order(X), cyclic(X)))","uncountable(FreeR)","free(FreeR)"],"not prime_order, not free":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X, Implies(prime_order(X), cyclic(X)))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","uncountable(R)","abelian(R)"],"prime_order, prime_power_order":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","prime_order(S_2)"],"prime_order, not prime_power_order":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))"],"not prime_order, prime_power_order":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(prime_order(X), cyclic(X)))","Not(abelian(D_4))","prime_power_order(D_4)"],"not prime_order, not prime_power_order":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","Not(prime_power_order(S_3))"],"prime_order, torsion_containing":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))","finite(S_2)","prime_order(S_2)"],"prime_order, not torsion_containing":["ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"not prime_order, torsion_containing":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","symmetric(S_N)","Not(abelian(S_N))","torsion_containing(S_N)","ForAll(X,\n       Implies(And(symmetric(X), Not(abelian(X))),\n               Not(prime_power_order(X))))"],"not prime_order, not torsion_containing":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), finite(X)))","aleph_0(ZupZ)","Not(torsion_containing(ZupZ))"],"symmetric, finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)","symmetric(S_3)"],"symmetric, not finitely_generated":["ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","symmetric(S_N)","uncountable(S_N)"],"not symmetric, finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","Not(symmetric(Zup2))","finitely_presentable(Zup2)"],"not symmetric, not finitely_generated":["ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"symmetric, finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)","symmetric(S_3)"],"symmetric, not finitely_presentable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","symmetric(S_N)","uncountable(S_N)"],"not symmetric, finitely_presentable":["Not(symmetric(Zup2))","finitely_presentable(Zup2)"],"not symmetric, not finitely_presentable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(R)","Not(symmetric(R))"],"symmetric, solvable":["symmetric(S_3)","solvable(S_3)"],"symmetric, not solvable":["symmetric(S_N)","Not(solvable(S_N))"],"not symmetric, solvable":["ForAll(X, Implies(abelian(X), solvable(X)))","abelian(R)","Not(symmetric(R))"],"not symmetric, not solvable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","ForAll(X,\n       Implies(And(symmetric(X), Not(trivial(X))),\n               torsion_containing(X)))","ForAll(X, Implies(trivial(X), finite(X)))","uncountable(FreeR)","free(FreeR)"],"symmetric, free":["trivial(one)","ForAll(X, Implies(trivial(X), symmetric(X)))","ForAll(X, Implies(trivial(X), free(X)))"],"symmetric, not free":["ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","Not(abelian(S_3))","symmetric(S_3)","solvable(S_3)"],"not symmetric, free":["Not(symmetric(Z))","free(Z)"],"not symmetric, not free":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","uncountable(R)","abelian(R)","Not(symmetric(R))"],"symmetric, prime_power_order":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","symmetric(S_2)","prime_order(S_2)"],"symmetric, not prime_power_order":["symmetric(S_3)","Not(prime_power_order(S_3))"],"not symmetric, prime_power_order":["Not(abelian(D_4))","prime_power_order(D_4)","ForAll(X,\n       Implies(And(symmetric(X), Not(abelian(X))),\n               Not(prime_power_order(X))))"],"not symmetric, not prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))","aleph_0(Z)","Not(symmetric(Z))"],"symmetric, torsion_containing":["symmetric(S_N)","torsion_containing(S_N)"],"symmetric, not torsion_containing":["trivial(one)","ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))","ForAll(X, Implies(trivial(X), symmetric(X)))"],"not symmetric, torsion_containing":["ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(trivial(X), symmetric(X)))","Not(symmetric(Z_3))","prime_order(Z_3)"],"not symmetric, not torsion_containing":["ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))","aleph_0(ZupZ)","Not(torsion_containing(ZupZ))"],"finitely_generated, finitely_presentable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","finitely_presentable(Zup2)"],"not finitely_generated, finitely_presentable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))"],"not finitely_generated, not finitely_presentable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","Not(finitely_generated(ZupZ))"],"finitely_generated, solvable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)","solvable(S_3)"],"finitely_generated, not solvable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_5)","Not(solvable(S_5))"],"not finitely_generated, solvable":["ForAll(X, Implies(abelian(X), solvable(X)))","abelian(ZupZ)","Not(finitely_generated(ZupZ))"],"not finitely_generated, not solvable":["ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(S_N)","Not(solvable(S_N))"],"finitely_generated, free":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","cyclic(Z)","free(Z)"],"finitely_generated, not free":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","Not(cyclic(Zup2))","abelian(Zup2)","finitely_presentable(Zup2)"],"not finitely_generated, free":["ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(FreeR)","free(FreeR)"],"not finitely_generated, not free":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","uncountable(R)","abelian(R)"],"finitely_generated, prime_power_order":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","ForAll(X, Implies(prime_power_order(X), finite(X)))","prime_power_order(D_4)"],"finitely_generated, not prime_power_order":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)","Not(prime_power_order(S_3))"],"not finitely_generated, prime_power_order":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","ForAll(X, Implies(prime_power_order(X), finite(X)))"],"not finitely_generated, not prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"finitely_generated, torsion_containing":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","finite(S_5)","Not(trivial(S_5))"],"finitely_generated, not torsion_containing":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","cyclic(Z)","free(Z)"],"not finitely_generated, torsion_containing":["ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(S_N)","torsion_containing(S_N)"],"not finitely_generated, not torsion_containing":["Not(finitely_generated(ZupZ))","Not(torsion_containing(ZupZ))"],"finitely_presentable, solvable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)","solvable(S_3)"],"finitely_presentable, not solvable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_5)","Not(solvable(S_5))"],"not finitely_presentable, solvable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(abelian(X), solvable(X)))","abelian(ZupZ)","Not(finitely_generated(ZupZ))"],"not finitely_presentable, not solvable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(S_N)","Not(solvable(S_N))"],"finitely_presentable, free":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","cyclic(Z)","free(Z)"],"finitely_presentable, not free":["ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","Not(cyclic(Zup2))","abelian(Zup2)","finitely_presentable(Zup2)"],"not finitely_presentable, free":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(FreeR)","free(FreeR)"],"not finitely_presentable, not free":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","uncountable(R)","abelian(R)"],"finitely_presentable, prime_power_order":["ForAll(X, Implies(finite(X), finitely_presentable(X)))","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","finite(S_2)","prime_order(S_2)"],"finitely_presentable, not prime_power_order":["ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)","Not(prime_power_order(S_3))"],"not finitely_presentable, prime_power_order":["ForAll(X, Implies(finite(X), finitely_presentable(X)))","ForAll(X, Implies(prime_power_order(X), finite(X)))"],"not finitely_presentable, not prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(prime_power_order(X), finite(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"finitely_presentable, torsion_containing":["ForAll(X, Implies(finite(X), finitely_presentable(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","finite(S_5)","Not(trivial(S_5))"],"finitely_presentable, not torsion_containing":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","cyclic(Z)","free(Z)"],"not finitely_presentable, torsion_containing":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(S_N)","torsion_containing(S_N)"],"not finitely_presentable, not torsion_containing":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","Not(finitely_generated(ZupZ))","Not(torsion_containing(ZupZ))"],"solvable, free":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(abelian(X), solvable(X)))","cyclic(Z)","free(Z)"],"solvable, not free":["ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","Not(abelian(S_3))","solvable(S_3)"],"not solvable, free":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","uncountable(FreeR)","free(FreeR)"],"not solvable, not free":["ForAll(X, Implies(torsion_containing(X), Not(free(X))))","torsion_containing(S_N)","Not(solvable(S_N))"],"solvable, prime_power_order":["prime_power_order(D_4)","solvable(D_4)"],"solvable, not prime_power_order":["Not(prime_power_order(S_3))","solvable(S_3)"],"finite(Free2)":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Free2)"],"aleph_0(Free2)":["aleph_0(Free2)"],"uncountable(Free2)":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Free2)"],"trivial(Free2)":["ForAll(X, Implies(trivial(X), symmetric(X)))","Not(symmetric(Free2))"],"cyclic(Free2)":["ForAll(X, Implies(cyclic(X), abelian(X)))","Not(abelian(Free2))"],"abelian(Free2)":["Not(abelian(Free2))"],"prime_order(Free2)":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), finite(X)))","aleph_0(Free2)"],"symmetric(Free2)":["Not(symmetric(Free2))"],"prime_power_order(Free2)":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))","aleph_0(Free2)"],"aleph_0, not abelian":["aleph_0(Free2)","Not(abelian(Free2))"],"not solvable, not prime_power_order":["symmetric(S_N)","Not(abelian(S_N))","Not(solvable(S_N))","ForAll(X,\n       Implies(And(symmetric(X), Not(abelian(X))),\n               Not(prime_power_order(X))))"],"solvable, torsion_containing":["ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","ForAll(X, Implies(trivial(X), free(X)))","finite(S_3)","Not(abelian(S_3))","solvable(S_3)"],"solvable, not torsion_containing":["ForAll(X, Implies(abelian(X), solvable(X)))","abelian(ZupZ)","Not(torsion_containing(ZupZ))"],"not solvable, torsion_containing":["torsion_containing(S_N)","Not(solvable(S_N))"],"not solvable, not torsion_containing":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","uncountable(FreeR)","free(FreeR)"],"free, prime_power_order":["ForAll(X, Implies(prime_power_order(X), finite(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"free, not prime_power_order":["trivial(one)","ForAll(X, Implies(trivial(X), free(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"not free, prime_power_order":["ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","Not(abelian(D_4))","prime_power_order(D_4)","solvable(D_4)"],"not free, not prime_power_order":["ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","Not(abelian(S_3))","Not(prime_power_order(S_3))","solvable(S_3)"],"free, torsion_containing":["ForAll(X, Implies(torsion_containing(X), Not(free(X))))"],"free, not torsion_containing":["ForAll(X, Implies(torsion_containing(X), Not(free(X))))","free(Z)"],"not free, torsion_containing":["ForAll(X, Implies(torsion_containing(X), Not(free(X))))","torsion_containing(S_N)"],"not free, not torsion_containing":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","abelian(ZupZ)","Not(finitely_generated(ZupZ))","Not(torsion_containing(ZupZ))"],"prime_power_order, torsion_containing":["ForAll(X, Implies(prime_power_order(X), finite(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))","prime_power_order(D_4)"],"prime_power_order, not torsion_containing":["ForAll(X, Implies(prime_power_order(X), finite(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"not prime_power_order, torsion_containing":["symmetric(S_N)","Not(abelian(S_N))","torsion_containing(S_N)","ForAll(X,\n       Implies(And(symmetric(X), Not(abelian(X))),\n               Not(prime_power_order(X))))"],"not prime_power_order, not torsion_containing":["trivial(one)","ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"finite, aleph_0, uncountable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, aleph_0, not uncountable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, not aleph_0, uncountable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, not aleph_0, not uncountable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_3)"],"not finite, aleph_0, uncountable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"not finite, aleph_0, not uncountable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Z)"],"not finite, not aleph_0, uncountable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","uncountable(R)"],"not finite, not aleph_0, not uncountable":["ForAll(X,\n       Implies(And(Not(aleph_0(X)), Not(uncountable(X))),\n               finite(X)))"],"finite, aleph_0, trivial":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, aleph_0, not trivial":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, not aleph_0, trivial":["trivial(one)","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), finite(X)))"],"finite, not aleph_0, not trivial":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_5)","Not(trivial(S_5))"],"not finite, aleph_0, trivial":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, aleph_0, not trivial":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(Z)","Not(symmetric(Z))"],"not finite, not aleph_0, trivial":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, not aleph_0, not trivial":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), symmetric(X)))","uncountable(R)","Not(symmetric(R))"],"finite, aleph_0, cyclic":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, aleph_0, not cyclic":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, not aleph_0, cyclic":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), cyclic(X)))","finite(S_2)","prime_order(S_2)"],"finite, not aleph_0, not cyclic":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(cyclic(Product(S_5, S_5))))"],"not finite, aleph_0, cyclic":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","aleph_0(Z)","cyclic(Z)"],"not finite, aleph_0, not cyclic":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Zup2)","Not(cyclic(Zup2))"],"not finite, not aleph_0, cyclic":["ForAll(X,\n       Implies(And(Not(aleph_0(X)), Not(uncountable(X))),\n               finite(X)))","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))"],"not finite, not aleph_0, not cyclic":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","uncountable(R)"],"finite, aleph_0, abelian":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, aleph_0, not abelian":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, not aleph_0, abelian":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_2)","abelian(S_2)"],"finite, not aleph_0, not abelian":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_3)","Not(abelian(S_3))"],"not finite, aleph_0, abelian":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","aleph_0(Zup2)","abelian(Zup2)"],"not finite, aleph_0, not abelian":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Free2)","Not(abelian(Free2))"],"not finite, not aleph_0, abelian":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","uncountable(R)","abelian(R)"],"not finite, not aleph_0, not abelian":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","uncountable(S_N)","Not(abelian(S_N))"],"finite, aleph_0, prime_order":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, aleph_0, not prime_order":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, not aleph_0, prime_order":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_2)","prime_order(S_2)"],"finite, not aleph_0, not prime_order":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), cyclic(X)))","finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(cyclic(Product(S_5, S_5))))"],"not finite, aleph_0, prime_order":["ForAll(X, Implies(prime_order(X), finite(X)))"],"not finite, aleph_0, not prime_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), cyclic(X)))","aleph_0(Zup2)","Not(cyclic(Zup2))"],"not finite, not aleph_0, prime_order":["ForAll(X, Implies(prime_order(X), finite(X)))"],"not finite, not aleph_0, not prime_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), finite(X)))","uncountable(R)"],"finite, aleph_0, symmetric":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, aleph_0, not symmetric":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, not aleph_0, symmetric":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_3)","symmetric(S_3)"],"finite, not aleph_0, not symmetric":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), finite(X)))","Not(symmetric(Z_3))","prime_order(Z_3)"],"not finite, aleph_0, symmetric":["ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))"],"not finite, aleph_0, not symmetric":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","aleph_0(Z)","Not(symmetric(Z))"],"not finite, not aleph_0, symmetric":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))","symmetric(S_N)","uncountable(S_N)"],"not finite, not aleph_0, not symmetric":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","uncountable(R)","Not(symmetric(R))"],"finite, aleph_0, finitely_generated":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, aleph_0, not finitely_generated":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, not aleph_0, finitely_generated":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)"],"finite, not aleph_0, not finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"not finite, aleph_0, finitely_generated":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(Zup2)","finitely_presentable(Zup2)"],"not finite, aleph_0, not finitely_generated":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"not finite, not aleph_0, finitely_generated":["ForAll(X,\n       Implies(And(Not(aleph_0(X)), Not(uncountable(X))),\n               finite(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))"],"not finite, not aleph_0, not finitely_generated":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(R)"],"finite, aleph_0, finitely_presentable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, aleph_0, not finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"finite, not aleph_0, finitely_presentable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)"],"finite, not aleph_0, not finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"not finite, aleph_0, finitely_presentable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","aleph_0(Zup2)","finitely_presentable(Zup2)"],"not finite, aleph_0, not finitely_presentable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"not finite, not aleph_0, finitely_presentable":["ForAll(X,\n       Implies(And(Not(aleph_0(X)), Not(uncountable(X))),\n               finite(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))"],"not finite, not aleph_0, not finitely_presentable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(R)"],"finite, aleph_0, solvable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, aleph_0, not solvable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, not aleph_0, solvable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_3)","solvable(S_3)"],"finite, not aleph_0, not solvable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_5)","Not(solvable(S_5))"],"not finite, aleph_0, solvable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(abelian(X), solvable(X)))","aleph_0(Zup2)","abelian(Zup2)"],"aleph_0, not solvable":["aleph_0(Z)","finite(S_5)","Not(solvable(S_5))","Implies(And(finite(S_5), aleph_0(Z)),\n        aleph_0(Product(S_5, Z)))","Implies(Or(Not(solvable(S_5)), Not(solvable(Z))),\n        Not(solvable(Product(S_5, Z))))"],"not finite, aleph_0, not solvable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","aleph_0(Z)","finite(S_5)","Not(solvable(S_5))","Implies(And(finite(S_5), aleph_0(Z)),\n        aleph_0(Product(S_5, Z)))","Implies(Or(Not(solvable(S_5)), Not(solvable(Z))),\n        Not(solvable(Product(S_5, Z))))"],"not finite, not aleph_0, solvable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(abelian(X), solvable(X)))","uncountable(R)","abelian(R)"],"not finite, not aleph_0, not solvable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","uncountable(S_N)","Not(solvable(S_N))"],"finite, aleph_0, free":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, aleph_0, not free":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, not aleph_0, free":["trivial(one)","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), free(X)))"],"finite, not aleph_0, not free":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","finite(S_3)","Not(abelian(S_3))","solvable(S_3)"],"not finite, aleph_0, free":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","aleph_0(Z)","free(Z)"],"not finite, aleph_0, not free":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","aleph_0(Zup2)","Not(cyclic(Zup2))","abelian(Zup2)"],"not finite, not aleph_0, free":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","uncountable(FreeR)","free(FreeR)"],"not finite, not aleph_0, not free":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","uncountable(R)","abelian(R)"],"finite, aleph_0, prime_power_order":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, aleph_0, not prime_power_order":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, not aleph_0, prime_power_order":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","finite(S_2)","prime_order(S_2)"],"finite, not aleph_0, not prime_power_order":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","finite(S_3)","Not(prime_power_order(S_3))"],"not finite, aleph_0, prime_power_order":["ForAll(X, Implies(prime_power_order(X), finite(X)))"],"not finite, aleph_0, not prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))","aleph_0(Z)"],"not finite, not aleph_0, prime_power_order":["ForAll(X, Implies(prime_power_order(X), finite(X)))"],"not finite, not aleph_0, not prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))","uncountable(R)"],"finite, aleph_0, torsion_containing":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, aleph_0, not torsion_containing":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))"],"finite, not aleph_0, torsion_containing":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","finite(S_5)","Not(trivial(S_5))"],"finite, not aleph_0, not torsion_containing":["trivial(one)","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))","ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, aleph_0, not torsion_containing":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","aleph_0(ZupZ)","Not(torsion_containing(ZupZ))"],"not finite, not aleph_0, torsion_containing":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","uncountable(S_N)","torsion_containing(S_N)"],"not finite, not aleph_0, not torsion_containing":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","uncountable(FreeR)","free(FreeR)"],"finite, uncountable, trivial":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, uncountable, not trivial":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, not uncountable, trivial":["trivial(one)","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"finite, not uncountable, not trivial":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_5)","Not(trivial(S_5))"],"not finite, uncountable, trivial":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, uncountable, not trivial":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), symmetric(X)))","uncountable(R)","Not(symmetric(R))"],"not finite, not uncountable, trivial":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, not uncountable, not trivial":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(Z)","Not(symmetric(Z))"],"finite, uncountable, cyclic":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, uncountable, not cyclic":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, not uncountable, cyclic":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X, Implies(prime_order(X), cyclic(X)))","finite(S_2)","prime_order(S_2)"],"finite, not uncountable, not cyclic":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(cyclic(Product(S_5, S_5))))"],"not finite, uncountable, cyclic":["ForAll(X, Implies(cyclic(X), Not(uncountable(X))))"],"not finite, uncountable, not cyclic":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","uncountable(R)"],"not finite, not uncountable, cyclic":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","aleph_0(Z)","cyclic(Z)"],"not finite, not uncountable, not cyclic":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Zup2)","Not(cyclic(Zup2))"],"finite, uncountable, abelian":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, uncountable, not abelian":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, not uncountable, abelian":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_2)","abelian(S_2)"],"finite, not uncountable, not abelian":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_3)","Not(abelian(S_3))"],"not finite, uncountable, abelian":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","uncountable(R)","abelian(R)"],"not finite, uncountable, not abelian":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","uncountable(S_N)","Not(abelian(S_N))"],"not finite, not uncountable, abelian":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Zup2)","abelian(Zup2)"],"not finite, not uncountable, not abelian":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Free2)","Not(abelian(Free2))"],"finite, uncountable, prime_order":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, uncountable, not prime_order":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, not uncountable, prime_order":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_2)","prime_order(S_2)"],"finite, not uncountable, not prime_order":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X, Implies(prime_order(X), cyclic(X)))","finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(cyclic(Product(S_5, S_5))))"],"not finite, uncountable, prime_order":["ForAll(X, Implies(prime_order(X), finite(X)))"],"not finite, uncountable, not prime_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X, Implies(prime_order(X), cyclic(X)))","uncountable(R)"],"not finite, not uncountable, prime_order":["ForAll(X, Implies(prime_order(X), finite(X)))"],"not finite, not uncountable, not prime_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X, Implies(prime_order(X), finite(X)))","aleph_0(Z)"],"finite, uncountable, symmetric":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, uncountable, not symmetric":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, not uncountable, symmetric":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_3)","symmetric(S_3)"],"finite, not uncountable, not symmetric":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(symmetric(Product(S_5, S_5))))"],"not finite, uncountable, symmetric":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","symmetric(S_N)","uncountable(S_N)"],"not finite, uncountable, not symmetric":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","uncountable(R)","Not(symmetric(R))"],"not finite, not uncountable, symmetric":["ForAll(X,\n       Implies(And(Not(aleph_0(X)), Not(uncountable(X))),\n               finite(X)))","ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))"],"not finite, not uncountable, not symmetric":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Z)","Not(symmetric(Z))"],"finite, uncountable, finitely_generated":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, uncountable, not finitely_generated":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, not uncountable, finitely_generated":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)"],"finite, not uncountable, not finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"not finite, uncountable, finitely_generated":["ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))"],"not finite, uncountable, not finitely_generated":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(R)"],"not finite, not uncountable, finitely_generated":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(Z)","cyclic(Z)"],"not finite, not uncountable, not finitely_generated":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"finite, uncountable, finitely_presentable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, uncountable, not finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"finite, not uncountable, finitely_presentable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)"],"finite, not uncountable, not finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"not finite, uncountable, finitely_presentable":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))"],"not finite, uncountable, not finitely_presentable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X,\n       Implies(finitely_generated(X), Not(uncountable(X))))","uncountable(R)"],"not finite, not uncountable, finitely_presentable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Zup2)","finitely_presentable(Zup2)"],"not finite, not uncountable, not finitely_presentable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"finite, uncountable, solvable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, uncountable, not solvable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, not uncountable, solvable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_3)","solvable(S_3)"],"finite, not uncountable, not solvable":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_5)","Not(solvable(S_5))"],"not finite, uncountable, solvable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(abelian(X), solvable(X)))","uncountable(R)","abelian(R)"],"not finite, uncountable, not solvable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","uncountable(S_N)","Not(solvable(S_N))"],"not finite, not uncountable, solvable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X, Implies(abelian(X), solvable(X)))","aleph_0(Zup2)","abelian(Zup2)"],"not finite, not uncountable, not solvable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Z)","finite(S_5)","Not(solvable(S_5))","Implies(And(finite(S_5), aleph_0(Z)),\n        aleph_0(Product(S_5, Z)))","Implies(Or(Not(solvable(S_5)), Not(solvable(Z))),\n        Not(solvable(Product(S_5, Z))))"],"finite, uncountable, free":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, uncountable, not free":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, not uncountable, free":["trivial(one)","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))","ForAll(X, Implies(trivial(X), free(X)))"],"finite, not uncountable, not free":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","finite(S_3)","Not(abelian(S_3))","solvable(S_3)"],"not finite, uncountable, free":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","uncountable(FreeR)","free(FreeR)"],"not finite, uncountable, not free":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","uncountable(R)","abelian(R)"],"not finite, not uncountable, free":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(Z)","free(Z)"],"not finite, not uncountable, not free":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","aleph_0(Zup2)","Not(cyclic(Zup2))","abelian(Zup2)"],"finite, uncountable, prime_power_order":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, uncountable, not prime_power_order":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, not uncountable, prime_power_order":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","finite(S_2)","prime_order(S_2)"],"finite, not uncountable, not prime_power_order":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","finite(S_3)","Not(prime_power_order(S_3))"],"not finite, uncountable, prime_power_order":["ForAll(X, Implies(prime_power_order(X), finite(X)))"],"not finite, uncountable, not prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","symmetric(S_N)","uncountable(S_N)","Not(abelian(S_N))","ForAll(X,\n       Implies(And(symmetric(X), Not(abelian(X))),\n               Not(prime_power_order(X))))"],"not finite, not uncountable, prime_power_order":["ForAll(X, Implies(prime_power_order(X), finite(X)))"],"not finite, not uncountable, not prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))","aleph_0(Z)"],"finite, uncountable, torsion_containing":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, uncountable, not torsion_containing":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))"],"finite, not uncountable, torsion_containing":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","finite(S_5)","Not(trivial(S_5))"],"finite, not uncountable, not torsion_containing":["trivial(one)","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"not finite, uncountable, torsion_containing":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","uncountable(S_N)","torsion_containing(S_N)"],"not finite, uncountable, not torsion_containing":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","uncountable(FreeR)","free(FreeR)"],"aleph_0, torsion_containing":["ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","aleph_0(Z)","finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), aleph_0(Z)),\n        aleph_0(Product(S_5, Z)))","Implies(Or(torsion_containing(S_5), torsion_containing(Z)),\n        torsion_containing(Product(S_5, Z)))"],"not finite, aleph_0, torsion_containing":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","aleph_0(Z)","finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), aleph_0(Z)),\n        aleph_0(Product(S_5, Z)))","Implies(Or(torsion_containing(S_5), torsion_containing(Z)),\n        torsion_containing(Product(S_5, Z)))"],"not finite, not uncountable, torsion_containing":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","aleph_0(Z)","finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), aleph_0(Z)),\n        aleph_0(Product(S_5, Z)))","Implies(Or(torsion_containing(S_5), torsion_containing(Z)),\n        torsion_containing(Product(S_5, Z)))"],"not finite, not uncountable, not torsion_containing":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","aleph_0(ZupZ)","Not(torsion_containing(ZupZ))"],"finite, trivial, cyclic":["trivial(one)","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"finite, trivial, not cyclic":["ForAll(X, Implies(trivial(X), cyclic(X)))"],"finite, not trivial, cyclic":["ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X, Implies(trivial(X), symmetric(X)))","Not(symmetric(Z_3))","cyclic(Z_3)","prime_order(Z_3)"],"finite, not trivial, not cyclic":["finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(trivial(Product(S_5, S_5))))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(cyclic(Product(S_5, S_5))))"],"not finite, trivial, cyclic":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, trivial, not cyclic":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, not trivial, cyclic":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(Z)","cyclic(Z)","Not(symmetric(Z))"],"not finite, not trivial, not cyclic":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), cyclic(X)))","aleph_0(Zup2)","Not(cyclic(Zup2))"],"finite, trivial, abelian":["trivial(one)","ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"finite, trivial, not abelian":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"finite, not trivial, abelian":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))","finite(S_2)","abelian(S_2)","prime_order(S_2)"],"finite, not trivial, not abelian":["ForAll(X, Implies(abelian(X), solvable(X)))","finite(S_5)","Not(trivial(S_5))","Not(solvable(S_5))"],"not finite, trivial, abelian":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, trivial, not abelian":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, not trivial, abelian":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), cyclic(X)))","aleph_0(Zup2)","Not(cyclic(Zup2))","abelian(Zup2)"],"not finite, not trivial, not abelian":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(Free2)","Not(abelian(Free2))","Not(symmetric(Free2))"],"finite, trivial, prime_order":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"finite, trivial, not prime_order":["trivial(one)","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"finite, not trivial, prime_order":["ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X, Implies(trivial(X), symmetric(X)))","Not(symmetric(Z_3))","prime_order(Z_3)"],"finite, not trivial, not prime_order":["ForAll(X, Implies(prime_order(X), cyclic(X)))","finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(trivial(Product(S_5, S_5))))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(cyclic(Product(S_5, S_5))))"],"not finite, trivial, prime_order":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, trivial, not prime_order":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, not trivial, prime_order":["ForAll(X, Implies(prime_order(X), finite(X)))"],"not finite, not trivial, not prime_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(Z)","Not(symmetric(Z))"],"finite, trivial, symmetric":["trivial(one)","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), symmetric(X)))"],"finite, trivial, not symmetric":["ForAll(X, Implies(trivial(X), symmetric(X)))"],"finite, not trivial, symmetric":["symmetric(S_5)","finite(S_5)","Not(trivial(S_5))"],"finite, not trivial, not symmetric":["finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(trivial(Product(S_5, S_5))))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(symmetric(Product(S_5, S_5))))"],"not finite, trivial, symmetric":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, trivial, not symmetric":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, not trivial, symmetric":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))","symmetric(S_N)","uncountable(S_N)","torsion_containing(S_N)"],"not finite, not trivial, not symmetric":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(Z)","Not(symmetric(Z))"],"finite, trivial, finitely_generated":["trivial(one)","ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"finite, trivial, not finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"finite, not trivial, finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_5)","Not(trivial(S_5))"],"finite, not trivial, not finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"not finite, trivial, finitely_generated":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, trivial, not finitely_generated":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, not trivial, finitely_generated":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(Z)","cyclic(Z)","Not(symmetric(Z))"],"not finite, not trivial, not finitely_generated":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"finite, trivial, finitely_presentable":["trivial(one)","ForAll(X, Implies(finite(X), finitely_presentable(X)))","ForAll(X, Implies(trivial(X), finite(X)))"],"finite, trivial, not finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"finite, not trivial, finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_5)","Not(trivial(S_5))"],"finite, not trivial, not finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"not finite, trivial, finitely_presentable":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, trivial, not finitely_presentable":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, not trivial, finitely_presentable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), cyclic(X)))","aleph_0(Zup2)","Not(cyclic(Zup2))","finitely_presentable(Zup2)"],"not finite, not trivial, not finitely_presentable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"finite, trivial, solvable":["trivial(one)","ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(abelian(X), solvable(X)))","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"finite, trivial, not solvable":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(abelian(X), solvable(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"finite, not trivial, solvable":["ForAll(X, Implies(prime_power_order(X), finite(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))","prime_power_order(D_4)","solvable(D_4)"],"finite, not trivial, not solvable":["finite(S_5)","Not(trivial(S_5))","Not(solvable(S_5))"],"not finite, trivial, solvable":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, trivial, not solvable":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, not trivial, solvable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(abelian(X), solvable(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))","aleph_0(Zup2)","Not(cyclic(Zup2))","abelian(Zup2)"],"not finite, not trivial, not solvable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))","uncountable(S_N)","torsion_containing(S_N)","Not(solvable(S_N))"],"finite, trivial, free":["trivial(one)","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), free(X)))"],"finite, trivial, not free":["ForAll(X, Implies(trivial(X), free(X)))"],"finite, not trivial, free":["ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))"],"finite, not trivial, not free":["ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","finite(S_5)","Not(trivial(S_5))"],"not finite, trivial, free":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, trivial, not free":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, not trivial, free":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(Z)","Not(symmetric(Z))","free(Z)"],"not finite, not trivial, not free":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","ForAll(X, Implies(trivial(X), symmetric(X)))","uncountable(R)","abelian(R)","Not(symmetric(R))"],"finite, trivial, prime_power_order":["ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"finite, trivial, not prime_power_order":["trivial(one)","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"finite, not trivial, prime_power_order":["ForAll(X, Implies(prime_power_order(X), finite(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))","prime_power_order(D_4)"],"finite, not trivial, not prime_power_order":["ForAll(X, Implies(abelian(X), solvable(X)))","symmetric(S_5)","finite(S_5)","Not(trivial(S_5))","Not(solvable(S_5))","ForAll(X,\n       Implies(And(symmetric(X), Not(abelian(X))),\n               Not(prime_power_order(X))))"],"not finite, trivial, prime_power_order":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, trivial, not prime_power_order":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, not trivial, prime_power_order":["ForAll(X, Implies(prime_power_order(X), finite(X)))"],"not finite, not trivial, not prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))","symmetric(S_N)","uncountable(S_N)","Not(abelian(S_N))","torsion_containing(S_N)","ForAll(X,\n       Implies(And(symmetric(X), Not(abelian(X))),\n               Not(prime_power_order(X))))"],"finite, trivial, torsion_containing":["ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))"],"finite, trivial, not torsion_containing":["trivial(one)","ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))","ForAll(X, Implies(trivial(X), finite(X)))"],"finite, not trivial, torsion_containing":["ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","finite(S_5)","Not(trivial(S_5))"],"finite, not trivial, not torsion_containing":["ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))"],"not finite, trivial, torsion_containing":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, trivial, not torsion_containing":["ForAll(X, Implies(trivial(X), finite(X)))"],"not finite, not trivial, torsion_containing":["ForAll(X,\n       Implies(uncountable(X),\n               And(Not(finite(X)), Not(aleph_0(X)))))","ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))","uncountable(S_N)","torsion_containing(S_N)"],"not finite, not trivial, not torsion_containing":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","ForAll(X, Implies(trivial(X), symmetric(X)))","aleph_0(Z)","Not(symmetric(Z))","free(Z)"],"finite, cyclic, abelian":["ForAll(X, Implies(prime_order(X), cyclic(X)))","finite(S_2)","abelian(S_2)","prime_order(S_2)"],"finite, cyclic, not abelian":["ForAll(X, Implies(cyclic(X), abelian(X)))"],"finite, not cyclic, abelian":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X, Implies(trivial(X), symmetric(X)))","Not(symmetric(Z_3))","cyclic(Z_3)","prime_order(Z_3)","Implies(And(abelian(Z_3), abelian(Z_3)),\n        abelian(Product(Z_3, Z_3)))","Implies(And(finite(Z_3), finite(Z_3)),\n        finite(Product(Z_3, Z_3)))","Implies(And(Not(trivial(Z_3)), Not(trivial(Z_3))),\n        Not(cyclic(Product(Z_3, Z_3))))"],"finite, not cyclic, not abelian":["ForAll(X, Implies(cyclic(X), abelian(X)))","finite(S_3)","Not(abelian(S_3))"],"not finite, cyclic, abelian":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","aleph_0(Z)","cyclic(Z)"],"not finite, cyclic, not abelian":["ForAll(X, Implies(cyclic(X), abelian(X)))"],"not finite, not cyclic, abelian":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Zup2)","Not(cyclic(Zup2))","abelian(Zup2)"],"not finite, not cyclic, not abelian":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","uncountable(S_N)","Not(abelian(S_N))"],"finite, cyclic, prime_order":["ForAll(X, Implies(prime_order(X), cyclic(X)))","finite(S_2)","prime_order(S_2)"],"finite, cyclic, not prime_order":["trivial(one)","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"finite, not cyclic, prime_order":["ForAll(X, Implies(prime_order(X), cyclic(X)))"],"finite, not cyclic, not prime_order":["ForAll(X, Implies(prime_order(X), cyclic(X)))","finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(cyclic(Product(S_5, S_5))))"],"not finite, cyclic, prime_order":["ForAll(X, Implies(prime_order(X), finite(X)))"],"not finite, cyclic, not prime_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), finite(X)))","aleph_0(Z)","cyclic(Z)"],"not finite, not cyclic, prime_order":["ForAll(X, Implies(prime_order(X), finite(X)))"],"not finite, not cyclic, not prime_order":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), cyclic(X)))","aleph_0(Zup2)","Not(cyclic(Zup2))"],"finite, cyclic, symmetric":["ForAll(X, Implies(prime_order(X), cyclic(X)))","finite(S_2)","symmetric(S_2)","prime_order(S_2)"],"finite, cyclic, not symmetric":["ForAll(X, Implies(prime_order(X), finite(X)))","Not(symmetric(Z_3))","cyclic(Z_3)","prime_order(Z_3)"],"finite, not cyclic, symmetric":["ForAll(X, Implies(cyclic(X), abelian(X)))","finite(S_3)","Not(abelian(S_3))","symmetric(S_3)"],"finite, not cyclic, not symmetric":["finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(cyclic(Product(S_5, S_5))))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(symmetric(Product(S_5, S_5))))"],"not finite, cyclic, symmetric":["ForAll(X,\n       Implies(And(Not(aleph_0(X)), Not(uncountable(X))),\n               finite(X)))","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","ForAll(X, Implies(symmetric(X), Not(aleph_0(X))))"],"not finite, cyclic, not symmetric":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Z)","cyclic(Z)","Not(symmetric(Z))"],"not finite, not cyclic, symmetric":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","symmetric(S_N)","uncountable(S_N)"],"not finite, not cyclic, not symmetric":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Zup2)","Not(cyclic(Zup2))","Not(symmetric(Zup2))"],"finite, cyclic, finitely_generated":["ForAll(X, Implies(prime_order(X), cyclic(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_2)","prime_order(S_2)"],"finite, cyclic, not finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"finite, not cyclic, finitely_generated":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_3)","Not(abelian(S_3))"],"finite, not cyclic, not finitely_generated":["ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"not finite, cyclic, finitely_generated":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(Z)","cyclic(Z)"],"not finite, cyclic, not finitely_generated":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))"],"not finite, not cyclic, finitely_generated":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(Zup2)","Not(cyclic(Zup2))","finitely_presentable(Zup2)"],"not finite, not cyclic, not finitely_generated":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"finite, cyclic, finitely_presentable":["ForAll(X, Implies(prime_order(X), cyclic(X)))","ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_2)","prime_order(S_2)"],"finite, cyclic, not finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"finite, not cyclic, finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))","finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(cyclic(Product(S_5, S_5))))"],"finite, not cyclic, not finitely_presentable":["ForAll(X, Implies(finite(X), finitely_presentable(X)))"],"not finite, cyclic, finitely_presentable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","aleph_0(Z)","cyclic(Z)"],"not finite, cyclic, not finitely_presentable":["ForAll(X, Implies(cyclic(X), finitely_presentable(X)))"],"not finite, not cyclic, finitely_presentable":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Zup2)","Not(cyclic(Zup2))","finitely_presentable(Zup2)"],"not finite, not cyclic, not finitely_presentable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))"],"finite, cyclic, solvable":["ForAll(X, Implies(prime_order(X), cyclic(X)))","ForAll(X, Implies(abelian(X), solvable(X)))","finite(S_2)","abelian(S_2)","prime_order(S_2)"],"finite, cyclic, not solvable":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(abelian(X), solvable(X)))"],"finite, not cyclic, solvable":["ForAll(X, Implies(cyclic(X), abelian(X)))","finite(S_3)","Not(abelian(S_3))","solvable(S_3)"],"finite, not cyclic, not solvable":["finite(S_5)","Not(trivial(S_5))","Not(solvable(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(cyclic(Product(S_5, S_5))))","Implies(Or(Not(solvable(S_5)), Not(solvable(S_5))),\n        Not(solvable(Product(S_5, S_5))))"],"not finite, cyclic, solvable":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(abelian(X), solvable(X)))","aleph_0(Z)","cyclic(Z)"],"not finite, cyclic, not solvable":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(abelian(X), solvable(X)))"],"not finite, not cyclic, solvable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(abelian(X), solvable(X)))","aleph_0(Zup2)","Not(cyclic(Zup2))","abelian(Zup2)"],"not finite, not cyclic, not solvable":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(trivial(X), cyclic(X)))","aleph_0(Zup2)","Not(cyclic(Zup2))","finite(S_5)","Not(trivial(S_5))","Not(solvable(S_5))","Implies(And(Not(trivial(S_5)), Not(trivial(Zup2))),\n        Not(cyclic(Product(S_5, Zup2))))","Implies(And(finite(S_5), aleph_0(Zup2)),\n        aleph_0(Product(S_5, Zup2)))","Implies(Or(Not(solvable(S_5)), Not(solvable(Zup2))),\n        Not(solvable(Product(S_5, Zup2))))"],"finite, cyclic, free":["trivial(one)","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))","ForAll(X, Implies(trivial(X), free(X)))"],"finite, cyclic, not free":["ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","ForAll(X, Implies(trivial(X), symmetric(X)))","Not(symmetric(Z_3))","cyclic(Z_3)","prime_order(Z_3)"],"finite, not cyclic, free":["ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"finite, not cyclic, not free":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X,\n       Implies(And(free(X), Not(abelian(X))),\n               Not(solvable(X))))","finite(S_3)","Not(abelian(S_3))","solvable(S_3)"],"not finite, cyclic, free":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","aleph_0(Z)","cyclic(Z)","free(Z)"],"not finite, not cyclic, free":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","uncountable(FreeR)","free(FreeR)"],"not finite, not cyclic, not free":["ForAll(X,\n       Implies(aleph_0(X),\n               And(Not(finite(X)), Not(uncountable(X)))))","ForAll(X,\n       Implies(And(free(X), Not(cyclic(X))),\n               Not(abelian(X))))","aleph_0(Zup2)","Not(cyclic(Zup2))","abelian(Zup2)"],"finite, cyclic, prime_power_order":["ForAll(X, Implies(prime_order(X), cyclic(X)))","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","finite(S_2)","prime_order(S_2)"],"finite, cyclic, not prime_power_order":["trivial(one)","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"finite, not cyclic, prime_power_order":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(prime_power_order(X), finite(X)))","Not(abelian(D_4))","prime_power_order(D_4)"],"finite, not cyclic, not prime_power_order":["ForAll(X, Implies(cyclic(X), abelian(X)))","finite(S_3)","Not(abelian(S_3))","Not(prime_power_order(S_3))"],"not finite, cyclic, prime_power_order":["ForAll(X, Implies(prime_power_order(X), finite(X)))"],"not finite, cyclic, not prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))","aleph_0(Z)","cyclic(Z)"],"not finite, not cyclic, prime_power_order":["ForAll(X, Implies(prime_power_order(X), finite(X)))"],"not finite, not cyclic, not prime_power_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_power_order(X), finite(X)))","aleph_0(Zup2)","Not(cyclic(Zup2))"],"finite, cyclic, torsion_containing":["ForAll(X, Implies(prime_order(X), finite(X)))","ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(trivial(X), symmetric(X)))","Not(symmetric(Z_3))","cyclic(Z_3)","prime_order(Z_3)"],"finite, cyclic, not torsion_containing":["trivial(one)","ForAll(X, Implies(trivial(X), Not(torsion_containing(X))))","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"finite, not cyclic, torsion_containing":["ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","finite(S_5)","Not(trivial(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(trivial(Product(S_5, S_5))))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(cyclic(Product(S_5, S_5))))"],"finite, not cyclic, not torsion_containing":["ForAll(X,\n       Implies(And(Not(trivial(X)), finite(X)),\n               torsion_containing(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))"],"not finite, cyclic, not torsion_containing":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(torsion_containing(X), Not(free(X))))","aleph_0(Z)","cyclic(Z)","free(Z)"],"not finite, not cyclic, torsion_containing":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), Not(uncountable(X))))","uncountable(S_N)","torsion_containing(S_N)"],"not finite, not cyclic, not torsion_containing":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(cyclic(X), finitely_presentable(X)))","ForAll(X,\n       Implies(finitely_presentable(X),\n               finitely_generated(X)))","aleph_0(ZupZ)","Not(finitely_generated(ZupZ))","Not(torsion_containing(ZupZ))"],"finite, abelian, prime_order":["finite(S_2)","abelian(S_2)","prime_order(S_2)"],"finite, abelian, not prime_order":["trivial(one)","ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(prime_order(X), prime_power_order(X)))","ForAll(X, Implies(trivial(X), finite(X)))","ForAll(X, Implies(trivial(X), cyclic(X)))","ForAll(X, Implies(trivial(X), Not(prime_power_order(X))))"],"finite, not abelian, prime_order":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(prime_order(X), cyclic(X)))"],"finite, not abelian, not prime_order":["ForAll(X, Implies(prime_order(X), prime_power_order(X)))","finite(S_3)","Not(abelian(S_3))","Not(prime_power_order(S_3))"],"not finite, abelian, prime_order":["ForAll(X, Implies(prime_order(X), finite(X)))"],"not finite, abelian, not prime_order":["ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), cyclic(X)))","aleph_0(Zup2)","Not(cyclic(Zup2))","abelian(Zup2)"],"not finite, not abelian, prime_order":["ForAll(X, Implies(prime_order(X), finite(X)))"],"not finite, not abelian, not prime_order":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X,\n       Implies(finite(X),\n               And(Not(aleph_0(X)), Not(uncountable(X)))))","ForAll(X, Implies(prime_order(X), cyclic(X)))","uncountable(S_N)","Not(abelian(S_N))"],"finite, abelian, symmetric":["finite(S_2)","abelian(S_2)","symmetric(S_2)"],"finite, abelian, not symmetric":["ForAll(X, Implies(cyclic(X), abelian(X)))","ForAll(X, Implies(prime_order(X), finite(X)))","Not(symmetric(Z_3))","cyclic(Z_3)","prime_order(Z_3)"],"finite, not abelian, symmetric":["finite(S_3)","Not(abelian(S_3))","symmetric(S_3)"],"finite, not abelian, not symmetric":["ForAll(X, Implies(abelian(X), solvable(X)))","finite(S_5)","Not(trivial(S_5))","Not(solvable(S_5))","Implies(And(finite(S_5), finite(S_5)),\n        finite(Product(S_5, S_5)))","Implies(And(Not(trivial(S_5)), Not(trivial(S_5))),\n        Not(symmetric(Product(S_5, S_5))))","Implies(Or(Not(solvable(S_5)), Not(solvable(S_5))),\n        Not(solvable(Product(S_5, S_5))))"]}